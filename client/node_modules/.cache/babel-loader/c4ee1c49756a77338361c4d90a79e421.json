{"ast":null,"code":"import axios from \"axios\";\nimport { axiosWithAuth } from \"./axiosAuth\";\nconst BASE_URL = \"http://localhost:5000/api/\";\nconst LOGIN = \"login\";\nconst COLORS = \"colors\";\nexport const bubbleLogin = credentials => {\n  return axios.post(`${BASE_URL}${LOGIN}`, credentials).then(response => {\n    return response;\n  }).catch(error => {\n    return error;\n  });\n};\nexport const getColors = () => {\n  return axiosWithAuth().get(`${BASE_URL}${COLORS}`).then(response => {\n    return response;\n  }).catch(error => {\n    return error;\n  });\n};","map":{"version":3,"sources":["/Users/christopherwschultz/Desktop/Lambda/web-sprint-challenge-advanced-web-applications/client/src/api/bubbleAPI.js"],"names":["axios","axiosWithAuth","BASE_URL","LOGIN","COLORS","bubbleLogin","credentials","post","then","response","catch","error","getColors","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,aAA9B;AAEA,MAAMC,QAAQ,GAAG,4BAAjB;AACA,MAAMC,KAAK,GAAG,OAAd;AACA,MAAMC,MAAM,GAAG,QAAf;AAEA,OAAO,MAAMC,WAAW,GAAIC,WAAD,IAAiB;AACxC,SAAON,KAAK,CAACO,IAAN,CAAY,GAAEL,QAAS,GAAEC,KAAM,EAA/B,EAAkCG,WAAlC,EACFE,IADE,CACIC,QAAD,IAAc;AAChB,WAAOA,QAAP;AACH,GAHE,EAIFC,KAJE,CAIKC,KAAD,IAAW;AACd,WAAOA,KAAP;AACH,GANE,CAAP;AAOH,CARM;AAUP,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,SAAOX,aAAa,GAAGY,GAAhB,CAAqB,GAAEX,QAAS,GAAEE,MAAO,EAAzC,EACFI,IADE,CACIC,QAAD,IAAc;AAChB,WAAOA,QAAP;AACH,GAHE,EAIFC,KAJE,CAIKC,KAAD,IAAW;AACd,WAAOA,KAAP;AACH,GANE,CAAP;AAOH,CARM","sourcesContent":["import axios from \"axios\";\nimport { axiosWithAuth } from \"./axiosAuth\";\n\nconst BASE_URL = \"http://localhost:5000/api/\";\nconst LOGIN = \"login\";\nconst COLORS = \"colors\";\n\nexport const bubbleLogin = (credentials) => {\n    return axios.post(`${BASE_URL}${LOGIN}`, credentials)\n        .then((response) => {\n            return response;\n        })\n        .catch((error) => {\n            return error;\n        });\n};\n\nexport const getColors = () => {\n    return axiosWithAuth().get(`${BASE_URL}${COLORS}`)\n        .then((response) => {\n            return response;\n        })\n        .catch((error) => {\n            return error;\n        });\n};\n"]},"metadata":{},"sourceType":"module"}